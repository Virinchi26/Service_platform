
1.

Go to google cloud console 
1st linki.e google cloud platform

Create a new project
in this my project name is django-auth

Go the Oauth consent screen
click on external and create

app-name: Django-authentication
user support email: virinchishettigar26@gmail.com

developer contact information
enter your email id

it will redirect you to scopes page

click on add or remove scopes

select the email and profile one

now save and continue

skip the test users


2. 
Now go to credentials

select create credentials and go to OAuth client ID

application type is web application

web client name is Django

and now authorized redirect Urls
i.e 
1. http://127.0.0.1:8000/
2. http://127.0.0.1:8000/accounts/google/login/callback/

Now a pop up will show pop up saying that you have created a OAuth client id and client secret

Download the json file of it
Now, paste it on your root directory of your django project

Now, go to settings.py file of your django project

add the following code in settings.py file


SITE_ID = 1

now in your installed apps add the following code

    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",



Now after adding the above code in installed apps

Add these two after the installed apps

SOCIALACCOUNT_PROVIDERS = {
    "google":{
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        "OAUTH_PKCE_ENABLED": True,
        'APP': {
            'client_id': ('CLIENT_ID'),
            'secret': ('SECRET'),
        }
    }
}
#profile and email are the scopes that we have added in the google cloud console

At the very end of the settings.py file add the google backend


AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

LOGIN_REDIRECT_URL = "/"

LOGOUT_REDIRECT_URL = "/"

Now, in your urls.py file add the following code

    path("accounts/", include("allauth.urls")),



Now, in urls.py of serivce_platform
    path("logout",views.logout_view,name = "logout")

Now in views.py of service_platform

from django.contrib.auth import logout


def home(request):
    return render(request,'home.html')

def logout_view(request):
    logout(request)
    return redirect("/")


    <a href="{% provider_login_url 'google' %}?next=/ "></a>

provider_login_url is a variable that is used to redirect to the google login page

google is the provider that we have added in the installed apps

next is the url that we want to redirect after the login is successful


Don't forget to install the all auth package

pip install django-allauth

And also add the following code in the middleware
    'allauth.account.middleware.AccountMiddleware',


Now connect it to the google

1. python manage.py makemigrations
2. python manage.py migrate


Now, run the server
python manage.py runserver

Now, create a super user
python manage.py createsuperuser
 and now login into your admin


In your admin panel go to sites and delete the example.com and add your domain name
Domain name: http://127.0.0.1:8000
Display name: http://127.0.0.1:8000

Now save it and go to the social applications

Add a social application 

since we are using google as our provider there will be a google option

click on it and add the client id and secret that we have downloaded from the google cloud console
i.e  in json file

After putting on the client and secret id, click on the arrow to drag the site from available sites to chosen sites to choose
and the click save